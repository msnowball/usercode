###########################################################
#                                                         #
#         Higgs Cross Section and Width SM4               #
#                                                         #
#  This is a simple class that takes in numbers for       #
#  cross section and branching ratios produced by         #
#  the Higgs XS working group and linearly                #
#  interpolates between them.                             #
#                                                         #
#                                                         #
#      Author:                                            #
#              Matt Snowball                              #
#              University of Florida                      #
#              snowball@phys.ufl.edu                      #
#                                                         #
###########################################################

April 12, 2012

Errors on Higgs BR have been included 

-----------------------------------------

April 5, 2012

***SPLINE IS NOW AVAILABLE***

-----------------------------------------


*********IMPORTANT*********
This SM version of the	original HCSaW only contains the difference
with respect to	SM.  In this case, it means that gg->H cross sections 
and SM4 Branching ratios are available.  For all other cross sections,
use the original SM version.


All XS are in pb.
All Widths are in GeV.

To use the class, you must include it into your C++ program
and compile with it.  You must also compile with ROOT, since
spline is dependent on TSpline3. An example Makefile is 
available in the test directory.


There are functions for Higgs width, cross sections, and cross section errors (combined, scale, pdf).
To use in your program simple declare 

e.g.   HiggsCSandWidthSM4 *myCSWSM4 = new HiggsCSandWidthSM4();

Then call the function you want

e.g.   	bool spline = true;
	double TotalWidth = myCSWSM4->HiggsWidth(0,<mH>,spline);

The following function are included:

  For cross section
	 double HiggsCS(int ID, double mH, double sqrts,bool spline);

  For cross section errors
	double HiggsCSErrPlus(int ID, double mH, double sqrts);
	double HiggsCSErrMinus(int ID, double mH, double sqrts);
 	double HiggsCSscaleErrPlus(int ID, double mH, double sqrts);
  	double HiggsCSscaleErrMinus(int ID, double mH, double sqrts);
  	double HiggsCSpdfErrPlus(int ID, double mH, double sqrts);
  	double HiggsCSpdfErrMinus(int ID, double mH, double sqrts); 


ID's for CS functions are

  /**********IDs*************/
  /*     ggToH = 1          */
  /*       VBF = N/A        */  ---> These are the same as SM so use HCSaW SM
  /*        WH = N/A        */
  /*        ZH = N/A        */
  /*       ttH = N/A        */
  /*     Total = N/A        */
  /**************************/

  For width
        double HiggsWidth(int ID,double mH,bool spline);
        double HiggsBR(int ID,double mH,bool spline);

ID's for Width/BR are 

  /***********************IDs************************/
  /*                       Total = 0                */
  /*                       H->bb = 1                */
  /*                   H->tautau = 2                */
  /*                     H->mumu = 3                */
  /*                       H->ss = 4                */
  /*                       H->cc = 5                */
  /*                       H->tt = 6                */
  /*                       H->gg = 7                */
  /*                   H->gamgam = 8                */
  /*                     H->gamZ = 9                */
  /*                       H->WW = 10               */
  /*                       H->ZZ = 11               */
  /*                   H->4e/4mu = 12               */
  /*                    H->2e2mu = 13               */
  /*             H->4l(e/mu/tau) = 14               */
  /*                       H->4q = 15               */
  /*                     H->2l2q = 16               */
  /*                       H->4f = 17               */
  /**************************************************/


NOTE: Error on *total* cross section is not given as it requires more 
      complicated calculation. All errors returned by error functions
      are relative. i.e. for 10.0% error, 0.1 is returned.
      Plus error functions return *positive*.
      Minus error functions return *negative*.
      

In this way if one wanted the upper and lower values of errors they would do

double CS = myCSWSM4->HiggsCS(<ID>,<mH>,<sqrts>);
double CSErrPlus = CS + myCSWSM4->HiggsCSErrPlus(<ID>,<mH>,<sqrts>)*CS;
double CSErrMinus = CS + myCSWSM4->HiggsCSErrMinus(<ID>,<mH>,<sqrts>)*CS;

In keeping to this, we make this class the most flexible for the user.


  For branching ratio errors
	double HiggsBRErr_Hff(int ID,double mH,double sqrts);
	double HiggsBRErr_HVV(int ID,double mH,double sqrts);
        double HiggsBRErr_Hgluglu(int ID,double mH,double sqrts);
        double HiggsBRErr_Hgamgam(int ID,double mH,double sqrts);

These are only available for H->tautau, H->gamgam, H->WW, and H->ZZ.
ID conventions follow the HiggsBR function.



Only numbers for sqrts = 7 are given in this version.

NOTE: The HiggsWidth function returns width in GeV. 


         






